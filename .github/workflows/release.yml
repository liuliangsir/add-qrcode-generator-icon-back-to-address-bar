name: Release Extension

on:
  push:
    tags:
      - '*.*.*'

env:
  NODE_VERSION: '24.3.0'
  PNPM_VERSION: '10.12.4'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build extension for Chrome
      run: pnpm build

    - name: Build extension for Firefox
      run: pnpm build:firefox

    - name: Create zip files
      run: |
        pnpm zip
        pnpm zip:firefox

    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/v}
        echo "version=$TAG" >> $GITHUB_OUTPUT
        echo "is_prerelease=$([[ $TAG =~ -(alpha|beta|rc) ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: ${{ steps.version.outputs.is_prerelease }}
        body: |
          ## Release ${{ steps.version.outputs.version }}

          ### ðŸ“¦ Downloads
          - **Chrome Extension**: Download the Chrome zip file below
          - **Firefox Extension**: Download the Firefox zip file below

          ### ðŸ”„ Changes
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.

          ### ðŸ“¥ Installation
          1. Download the appropriate zip file for your browser
          2. Extract the zip file
          3. Load the extension in your browser's developer mode

    - name: Upload Chrome Extension
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./.output/add-qrcode-generator-icon-back-to-address-bar-chrome.zip
        asset_name: add-qrcode-generator-icon-back-to-address-bar-chrome-${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip

    - name: Upload Firefox Extension
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./.output/add-qrcode-generator-icon-back-to-address-bar-firefox.zip
        asset_name: add-qrcode-generator-icon-back-to-address-bar-firefox-${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip

  publish-chrome-store:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build extension for Chrome
      run: pnpm build

    - name: Publish to Chrome Web Store
      uses: PlasmoHQ/bpp@v3
      with:
        keys: ${{ secrets.CHROME_STORE_KEYS }}
        chrome-file: ./.output/chrome-mv3/
        verbose: true

  publish-firefox-store:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build extension for Firefox
      run: pnpm build:firefox

    - name: Sign and publish to Firefox Add-ons
      uses: PlasmoHQ/bpp@v3
      with:
        keys: ${{ secrets.FIREFOX_STORE_KEYS }}
        firefox-file: ./.output/firefox-mv2/
        verbose: true
